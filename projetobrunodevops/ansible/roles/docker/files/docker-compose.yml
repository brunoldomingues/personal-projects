services:
  whoami:
    image: jwilder/whoami
    ports:
      - "8082:8000"
    networks:
      - app-network

  # Criação de container para banco de dados PostgreSQL
  zabbix-db:
    image: postgres:15
    container_name: zabbix-db
    environment:
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pass
      POSTGRES_DB: zabbix
    volumes:
      - zabbix-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Criação de container para server Zabbix
  zabbix-server:
    image: zabbix/zabbix-server-pgsql:latest
    container_name: zabbix-server
    environment:
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pass
    depends_on:
      - zabbix-db
    networks:
      - app-network

  # Criação de container para interface web do Zabbix
  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    container_name: zabbix-web
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: zabbix-db
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: zabbix_pass
    depends_on:
      - zabbix-server
    ports:
      - "8081:8080"
    networks:
      - app-network

  # Criação de container para Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app-network

  # Criação de container para Nginx com ingress
  nginx:
    image: nginx:latest
    container_name: nginx-ingress
    volumes:
      - /tmp/projetobrunodevops/ansible/roles/nginx/files/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - zabbix-web
      - grafana
      - whoami
    networks:
      - app-network

# Configuração de volumes (para persistencia de dados)
volumes:
  zabbix-db-data:
  grafana-data:

# Configuração de rede dos containers
networks:
  app-network:
    driver: bridge
